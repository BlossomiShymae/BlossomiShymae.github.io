import{_ as t,o as a,c as n,a as e}from"./index-3a7ae816.js";const i={},o={class:"mvvm"},s=e("h1",null,"MVVM (model-view-viewmodel)",-1),d=e("p",null,"An architectural pattern that can be seen added in GUI applications or innate in web frameworks like Vue.js, Svelte, etc. The view is binded to the viewmodel and the viewmodel updates the model. The model notifies the viewmodel for change in domain data and the viewmodel notifies the view for changes in presentation data.",-1),c=e("p",null,"I really like this pattern cause I use this nearly every time I create a client application. The only downside is this can create more files than needed (I usually create 1:1 view to viewmodels). At least it makes thingies much more easier to maintain and understand. :3 ",-1),l=[s,d,c];function r(h,m){return a(),n("div",o,l)}const u=t(i,[["render",r]]);export{u as default};
